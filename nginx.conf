events {
    # You can configure worker_connections here, e.g.:
    # worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    server_tokens off;
    client_max_body_size 10M;

    upstream django {
        server web:8000;
    }

    server {
        listen 80;
        server_name losshop.onrender.com www.losshop.onrender.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        client_max_body_size 20M;

        server_name losshop.onrender.com www.losshop.onrender.com;

        ssl_certificate /etc/letsencrypt/live/losshop.onrender.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/losshop.onrender.com/privkey.pem;

        location / {
            proxy_pass http://web:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        location /static/ {
            alias /app/staticfiles/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
            # Если используешь WhiteNoise на этом окружении — этот блок не нужен,
            # но мы сейчас как раз отключили WhiteNoise локально.
        }

        # Раздача медиа (если нужно)
        location /media/ {
            alias /app/media/;
            expires 30d;
            add_header Cache-Control "public";
            try_files $uri =404;
        }
    }
}